{"remainingRequest":"C:\\Users\\Raul\\Desktop\\Snake_finalV2\\Snake\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Raul\\Desktop\\Snake_finalV2\\Snake\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Raul\\Desktop\\Snake_finalV2\\Snake\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Raul\\Desktop\\Snake_finalV2\\Snake\\client\\src\\components\\SnakeGame.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Raul\\Desktop\\Snake_finalV2\\Snake\\client\\src\\components\\SnakeGame.vue","mtime":1621920187403},{"path":"C:\\Users\\Raul\\Desktop\\Snake_finalV2\\Snake\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Raul\\Desktop\\Snake_finalV2\\Snake\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Raul\\Desktop\\Snake_finalV2\\Snake\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Raul\\Desktop\\Snake_finalV2\\Snake\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGlvIGZyb20gInNvY2tldC5pby1jbGllbnQiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNuYWtlR2FtZSIsCiAgLy9wb3ppdGlhIGN1cmVudGEgc2FycGUKICBzbmFrZVBvc2l0aW9uOiBbXSwKICAvL3Bveml0aWEgY3VyZW50YSBtYW5jYXJlCiAgZm9vZFBvc2l0aW9uOiB7fSwKICAvL3Bveml0aWEgdHJlY3V0YSBzYXJwZQogIHBhc3RTbmFrZVBvc2l0aW9uOiBbXSwKICAvL3Bveml0aWEgdHJlY3V0YSBtYW5jYXJlCiAgcGFzdEZvb2RQb3NpdGlvbjoge30sCiAgLy9kaXJlY3Rpb24gcG9hdGUgZmk6ICdyJywnbCcsJ3UnLCdkJwogIGRpcmVjdGlvbjogInIiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzb2NrZXQ6IHt9LAogICAgICBjb250ZXh0OiB7fSwKICAgICAgc2NvcmU6IDAKICAgIH07CiAgfSwKICAvL0NvbmV4aXVuZWEKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5zb2NrZXQgPSBpbygiaHR0cDovL2xvY2FsaG9zdDozMDAwIik7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLmNvbnRleHQgPSB0aGlzLiRyZWZzLmdhbWUuZ2V0Q29udGV4dCgiMmQiKTsgLy9EZXNlbmFyZWEgc2FycGVsdWkKCiAgICB0aGlzLnNvY2tldC5vbigic25ha2VQb3NpdGlvbiIsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIF90aGlzLnNuYWtlUG9zaXRpb24gPSBkYXRhOwoKICAgICAgX3RoaXMucGFpbnRTbmFrZSgpOwogICAgfSk7IC8vRGVzZW5hcmVhIG1hbmNhcmlpCgogICAgdGhpcy5zb2NrZXQub24oImZvb2RQb3NpdGlvbiIsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIF90aGlzLmZvb2RQb3NpdGlvbiA9IGRhdGE7CgogICAgICBfdGhpcy5wYWludEZvb2QoX3RoaXMuZm9vZFBvc2l0aW9uKTsKCiAgICAgIF90aGlzLnBhc3RGb29kUG9zaXRpb24gPSBkYXRhOwogICAgfSk7IC8vU2ZhcnNpdCBqb2M6IEFmaXNlYXphIHVuIG1lc2FqIHNpIHNjb3J1bCArIHJlaW5jYXJjYSBwYWdpbmEKCiAgICB0aGlzLnNvY2tldC5vbigibG9zZSIsIGZ1bmN0aW9uICgpIHsKICAgICAgYWxlcnQoIllvdSBsb3NlISBZb3VyIGZpbmFsIHNjb3JlIGlzOiAiICsgX3RoaXMuc2NvcmUpOwogICAgICB3aW5kb3cubG9jYXRpb24gPSBsb2NhdGlvbjsKICAgIH0pOyAvL1VwZGF0ZWF6YSBzY29yCgogICAgdGhpcy5zb2NrZXQub24oInVwZGF0ZVNjb3JlIiwgZnVuY3Rpb24gKCkgewogICAgICBfdGhpcy5zY29yZSArPSAxMDsKICAgIH0pOyAvL0V2ZW50IGxpc3RlbmVyIHB0IHRhc3RhIGFwYXNhdGEKCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigia2V5ZG93biIsIGZ1bmN0aW9uIChlKSB7CiAgICAgIHN3aXRjaCAoZS5rZXkpIHsKICAgICAgICBjYXNlICJBcnJvd1VwIjoKICAgICAgICAgIGNvbnNvbGUubG9nKGUua2V5KTsgLy9EYWNhIHNhcnBlbGUgc2UgZGVwbGFzZWF6YSBpbiBqb3MsIG51IHBvdCBkYSBjb21hbmRhIHN1cwoKICAgICAgICAgIGlmIChfdGhpcy5kaXJlY3Rpb24gIT0gImQiKSB7CiAgICAgICAgICAgIF90aGlzLmdvVXAoKTsKCiAgICAgICAgICAgIF90aGlzLmRpcmVjdGlvbiA9ICJ1IjsKICAgICAgICAgIH0KCiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAiQXJyb3dEb3duIjoKICAgICAgICAgIGNvbnNvbGUubG9nKGUua2V5KTsgLy9EYWNhIHNhcnBlbGUgc2UgZGVwbGFzZWF6YSBpbiBzdXMsIG51IHBvdCBkYSBjb21hbmRhIGRlIGpvcwoKICAgICAgICAgIGlmIChfdGhpcy5kaXJlY3Rpb24gIT0gInUiKSB7CiAgICAgICAgICAgIF90aGlzLmdvRG93bSgpOwoKICAgICAgICAgICAgX3RoaXMuZGlyZWN0aW9uID0gImQiOwogICAgICAgICAgfQoKICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLnBhc3RTbmFrZVBvc2l0aW9uWzBdLngsIF90aGlzLnBhc3RTbmFrZVBvc2l0aW9uWzBdLnkpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGNhc2UgIkFycm93TGVmdCI6CiAgICAgICAgICBjb25zb2xlLmxvZyhlLmtleSk7IC8vRGFjYSBzYXJwZWxlIHNlIGRlcGxhc2VhemEgc3ByZSBkcmVhcHRhLCBudSBwb3QgZGEgY29tYW5kYSBkZSBzdGFuZ2EKCiAgICAgICAgICBpZiAoX3RoaXMuZGlyZWN0aW9uICE9ICJyIikgewogICAgICAgICAgICBfdGhpcy5nb0xlZnQoKTsKCiAgICAgICAgICAgIF90aGlzLmRpcmVjdGlvbiA9ICJsIjsKICAgICAgICAgIH0KCiAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpcy5wYXN0U25ha2VQb3NpdGlvblswXS54LCBfdGhpcy5wYXN0U25ha2VQb3NpdGlvblswXS55KTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICJBcnJvd1JpZ2h0IjoKICAgICAgICAgIGNvbnNvbGUubG9nKGUua2V5KTsgLy9EYWNhIHNhcnBlbGUgc2UgZGVwbGFzZWF6YSBzcHJlIHN0YW5nYSBudSBwb3QgZGEgY29tYW5kYSBkZSBkcmVhcHRhCgogICAgICAgICAgaWYgKF90aGlzLmRpcmVjdGlvbiAhPSAibCIpIHsKICAgICAgICAgICAgX3RoaXMuZ29SaWdodCgpOwoKICAgICAgICAgICAgX3RoaXMuZGlyZWN0aW9uID0gInIiOwogICAgICAgICAgfQoKICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLnBhc3RTbmFrZVBvc2l0aW9uWzBdLngsIF90aGlzLnBhc3RTbmFrZVBvc2l0aW9uWzBdLnkpOwogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgLy9NZXRvZGEgZGUgZGVzZW5hcmUgc2FycGUKICAgIHBhaW50U25ha2U6IGZ1bmN0aW9uIHBhaW50U25ha2UoKSB7CiAgICAgIC8vRGFjYSBwb3ppdGlpbGUgdHJlY3V0ZSBudSBzdW50IG51bGUsIGxlIHN0ZXJnCiAgICAgIGlmICh0aGlzLnBhc3RTbmFrZVBvc2l0aW9uICE9IG51bGwpIHsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucGFzdFNuYWtlUG9zaXRpb24ubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIHRoaXMuY29udGV4dC5jbGVhclJlY3QodGhpcy5wYXN0U25ha2VQb3NpdGlvbltpXS54LCB0aGlzLnBhc3RTbmFrZVBvc2l0aW9uW2ldLnksIDIwLCAyMCk7CgogICAgICAgICAgaWYgKGkgPCB0aGlzLnNuYWtlUG9zaXRpb24ubGVuZ3RoIC0gMSkgewogICAgICAgICAgICB0aGlzLnNuYWtlUG9zaXRpb25baSArIDFdID0gdGhpcy5wYXN0U25ha2VQb3NpdGlvbltpXTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gLy9EZXNlbmV6IHBveml0aWlsZSBhY3R1YWxlIGFsZSBzYXJwZWx1aQoKCiAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSAiYmxhY2s7IjsKCiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgdGhpcy5zbmFrZVBvc2l0aW9uLmxlbmd0aDsgaisrKSB7CiAgICAgICAgdGhpcy5jb250ZXh0LmZpbGxSZWN0KHRoaXMuc25ha2VQb3NpdGlvbltqXS54LCB0aGlzLnNuYWtlUG9zaXRpb25bal0ueSwgMjAsIDIwKTsKICAgICAgfQoKICAgICAgdGhpcy52ZXJpZnkoKTsKICAgICAgdGhpcy5wYXN0U25ha2VQb3NpdGlvbiA9IHRoaXMuc25ha2VQb3NpdGlvbjsKICAgIH0sCiAgICAvL01ldG9kYSBkZSBkZXNlbmF0IG1hbmNhcmVhCiAgICBwYWludEZvb2Q6IGZ1bmN0aW9uIHBhaW50Rm9vZChwb3NpdGlvbikgewogICAgICAvL0RhY2EgcG96aXRpYSB0cmVjdXRhIGEgbWFuY2FyaWkgbnUgZXN0ZSBudWxsLCBvIHN0ZXJnCiAgICAgIGlmICh0aGlzLnBhc3RGb29kUG9zaXRpb24gIT0gbnVsbCkgewogICAgICAgIHRoaXMuY29udGV4dC5jbGVhclJlY3QodGhpcy5wYXN0Rm9vZFBvc2l0aW9uLngsIHRoaXMucGFzdEZvb2RQb3NpdGlvbi55LCAyMCwgMjApOwogICAgICB9IC8vRGVzZW5leiBwb3ppdGlhIGFjdHVhbGEgYSBtYW5jYXJpaQoKCiAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSAicmVkIjsKICAgICAgdGhpcy5jb250ZXh0LmZpbGxSZWN0KHBvc2l0aW9uLngsIHBvc2l0aW9uLnksIDIwLCAyMCk7CiAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSAiYmxhY2siOwogICAgfSwKICAgIC8vSW4gZnVuY3RpZSBkZSB0YXN0YSBhcGFzYXRhIHNlIGFwZWxlYXphIHVuYSBkaW4gbWV0b2RlbGUKICAgIC8vZGUgbWFpIGpvcyBjYXJlIGVtaXQgdW4gbWVzYWogY29yZXNwdW56YXRvciBjYXRyZSBzZXJ2ZXIKICAgIGdvUmlnaHQ6IGZ1bmN0aW9uIGdvUmlnaHQoKSB7CiAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSAiYmxhY2siOwogICAgICB0aGlzLnNvY2tldC5lbWl0KCJnb1JpZ2h0Iik7CiAgICB9LAogICAgZ29MZWZ0OiBmdW5jdGlvbiBnb0xlZnQoKSB7CiAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSAiYmxhY2siOwogICAgICB0aGlzLnNvY2tldC5lbWl0KCJnb0xlZnQiKTsKICAgIH0sCiAgICBnb1VwOiBmdW5jdGlvbiBnb1VwKCkgewogICAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gImJsYWNrIjsKICAgICAgdGhpcy5zb2NrZXQuZW1pdCgiZ29VcCIpOwogICAgfSwKICAgIGdvRG93bTogZnVuY3Rpb24gZ29Eb3dtKCkgewogICAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gImJsYWNrIjsKICAgICAgdGhpcy5zb2NrZXQuZW1pdCgiZ29Eb3duIik7CiAgICB9LAogICAgLy9NZXRvZGEgdmVyaWZpY2EgZGFjYSBzYXJwZWxlIG51IHMtYSBtdXNjYXQgcGUgZWwKICAgIC8vRGFjYSBzLWEgbXVzY2F0IGFmaXNlYXphIHVuIG1lc2FqIHNpIHNjb3J1bAogICAgdmVyaWZ5OiBmdW5jdGlvbiB2ZXJpZnkoKSB7CiAgICAgIGZvciAodmFyIGkyID0gMTsgaTIgPCB0aGlzLnNuYWtlUG9zaXRpb24ubGVuZ3RoOyBpMisrKSB7CiAgICAgICAgaWYgKHRoaXMuc25ha2VQb3NpdGlvblswXS54ID09IHRoaXMuc25ha2VQb3NpdGlvbltpMl0ueCAmJiB0aGlzLnNuYWtlUG9zaXRpb25bMF0ueSA9PSB0aGlzLnNuYWtlUG9zaXRpb25baTJdLnkpIHsKICAgICAgICAgIGFsZXJ0KCJZb3UgbG9zZSEgWW91ciBmaW5hbCBzY29yZSBpczogIiArIHRoaXMuc2NvcmUpOwogICAgICAgICAgd2luZG93LmxvY2F0aW9uID0gbG9jYXRpb247CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["SnakeGame.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"snake\">\n    <h1>Snake Game</h1>\n    <h2>Score: {{ score }}</h2>\n    <canvas\n      ref=\"game\"\n      class=\"board\"\n      width=\"640\"\n      height=\"480\"\n      style=\"border: 1px solid black\"\n    >\n    </canvas>\n  </div>\n</template>\n\n<script>\nimport io from \"socket.io-client\";\nexport default {\n  name: \"SnakeGame\",\n  //pozitia curenta sarpe\n  snakePosition: [],\n  //pozitia curenta mancare\n  foodPosition: {},\n  //pozitia trecuta sarpe\n  pastSnakePosition: [],\n  //pozitia trecuta mancare\n  pastFoodPosition: {},\n  //direction poate fi: 'r','l','u','d'\n  direction: \"r\",\n  data() {\n    return {\n      socket: {},\n      context: {},\n      score: 0,\n    };\n  },\n\n  //Conexiunea\n  created() {\n    this.socket = io(\"http://localhost:3000\");\n  },\n\n  mounted() {\n    this.context = this.$refs.game.getContext(\"2d\");\n    //Desenarea sarpelui\n    this.socket.on(\"snakePosition\", (data) => {\n      this.snakePosition = data;\n      this.paintSnake();\n    });\n\n    //Desenarea mancarii\n    this.socket.on(\"foodPosition\", (data) => {\n      this.foodPosition = data;\n      this.paintFood(this.foodPosition);\n      this.pastFoodPosition = data;\n    });\n\n    //Sfarsit joc: Afiseaza un mesaj si scorul + reincarca pagina\n    this.socket.on(\"lose\", () => {\n      alert(\"You lose! Your final score is: \" + this.score);\n      window.location = location;\n    });\n\n    //Updateaza scor\n    this.socket.on(\"updateScore\", () => {\n      this.score += 10;\n    });\n\n    //Event listener pt tasta apasata\n    window.addEventListener(\"keydown\", (e) => {\n      \n      switch (e.key) {\n        case \"ArrowUp\":\n          console.log(e.key);\n          //Daca sarpele se deplaseaza in jos, nu pot da comanda sus\n          if (this.direction != \"d\") {\n            this.goUp();\n            this.direction = \"u\";\n          }break;\n\n        case \"ArrowDown\":\n          console.log(e.key);\n          //Daca sarpele se deplaseaza in sus, nu pot da comanda de jos\n          if (this.direction != \"u\") {\n            this.goDowm();\n            this.direction = \"d\";\n          }\n          console.log(this.pastSnakePosition[0].x, this.pastSnakePosition[0].y);\n          break;\n\n        case \"ArrowLeft\":\n          console.log(e.key);\n          //Daca sarpele se deplaseaza spre dreapta, nu pot da comanda de stanga\n          if (this.direction != \"r\") {\n            this.goLeft();\n            this.direction = \"l\";\n          }\n          console.log(this.pastSnakePosition[0].x, this.pastSnakePosition[0].y);\n          break;\n\n        case \"ArrowRight\":\n          console.log(e.key);\n          //Daca sarpele se deplaseaza spre stanga nu pot da comanda de dreapta\n          if (this.direction != \"l\") {\n            this.goRight();\n            this.direction = \"r\";\n          }\n          console.log(this.pastSnakePosition[0].x, this.pastSnakePosition[0].y);\n          break;\n      }\n    });\n  },\n\n  methods: {\n    //Metoda de desenare sarpe\n    paintSnake() {\n      //Daca pozitiile trecute nu sunt nule, le sterg\n      if (this.pastSnakePosition != null) {\n        for (var i = 0; i < this.pastSnakePosition.length; i++) {\n          this.context.clearRect(\n            this.pastSnakePosition[i].x,\n            this.pastSnakePosition[i].y,\n            20,\n            20\n          );\n          if (i < this.snakePosition.length - 1) {\n            this.snakePosition[i + 1] = this.pastSnakePosition[i];\n          }\n        }\n      }\n      //Desenez pozitiile actuale ale sarpelui\n      this.context.fillStyle = \"black;\";\n      for (var j = 0; j < this.snakePosition.length; j++) {\n        this.context.fillRect(\n          this.snakePosition[j].x,\n          this.snakePosition[j].y,\n          20,\n          20\n        );\n      }\n      this.verify();\n      this.pastSnakePosition = this.snakePosition;\n    },\n\n    //Metoda de desenat mancarea\n    paintFood(position) {\n      //Daca pozitia trecuta a mancarii nu este null, o sterg\n      if (this.pastFoodPosition != null) {\n        this.context.clearRect(\n          this.pastFoodPosition.x,\n          this.pastFoodPosition.y,\n          20,\n          20\n        );\n      }\n      //Desenez pozitia actuala a mancarii\n      this.context.fillStyle = \"red\";\n      this.context.fillRect(position.x, position.y, 20, 20);\n      this.context.fillStyle = \"black\";\n    },\n\n    //In functie de tasta apasata se apeleaza una din metodele\n    //de mai jos care emit un mesaj corespunzator catre server\n    goRight() {\n      this.context.fillStyle = \"black\";\n      this.socket.emit(\"goRight\");\n    },\n\n    goLeft() {\n      this.context.fillStyle = \"black\";\n      this.socket.emit(\"goLeft\");\n    },\n\n    goUp() {\n      this.context.fillStyle = \"black\";\n      this.socket.emit(\"goUp\");\n    },\n\n    goDowm() {\n      this.context.fillStyle = \"black\";\n      this.socket.emit(\"goDown\");\n    },\n\n    //Metoda verifica daca sarpele nu s-a muscat pe el\n    //Daca s-a muscat afiseaza un mesaj si scorul\n    verify(){\n      for (var i2 = 1; i2 < this.snakePosition.length; i2++) {\n        if ( (this.snakePosition[0].x == this.snakePosition[i2].x) && (this.snakePosition[0].y == this.snakePosition[i2].y)) {\n          alert(\"You lose! Your final score is: \" + this.score);\n          window.location = location;\n        }\n      }\n    }\n  },\n};\n</script>\n\n<style scoped>\n/* Centrarea elementelor */\n.snake {\n  margin: 0;\n  padding: 0;\n  text-align: center;\n}\n\n.board {\n  margin-top: 100px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}